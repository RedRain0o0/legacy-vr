plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	maven {
		url "https://maven.isxander.dev/releases"
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	//modImplementation "maven.modrinth:legacy4j:${project.minecraft_version}-${project.legacy_version}+fabric"
	modImplementation "maven.modrinth:vivecraft:${project.minecraft_version}-${project.vivecraft_version}-fabric"
	//localRuntime "dev.isxander:libsdl4j:3.693c75e-36"

	Set<String> apiModules = [
			"fabric-api-base",
			"fabric-command-api-v2",
			"fabric-resource-loader-v0"
	]

	apiModules.forEach {
		include(modImplementation(fabricApi.module(it, "${project.fabric_version}")))
	}

	// needed for resource loading
	//modImplementation(fabricApi.module("fabric-resource-loader-v0${project.fabric_version}"))
	// commands also needs base
	//include(modImplementation(fabricApi.module("fabric-api-base", ${project.fabric_version})))
	//include(modImplementation(fabricApi.module("fabric-command-api-v2", ${project.fabric_version})))

	include(implementation('com.electronwill.night-config:toml:3.6.6'))
	include(implementation('com.electronwill.night-config:core:3.6.6'))

	include(implementation("org.lwjgl:lwjgl-openvr:3.3.2"))
	include(implementation("org.lwjgl:lwjgl-openvr:3.3.2:natives-linux"))
	include(implementation("org.lwjgl:lwjgl-openvr:3.3.2:natives-macos"))
	include(implementation("org.lwjgl:lwjgl-openvr:3.3.2:natives-windows"))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}